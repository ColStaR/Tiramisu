-Here you put everything that you want to do and how you want to do it. Keep the feature names the same as in the Todo list, it helps to keep stuff tidy.

Right click:
At the moment to add new right click options you need to edit the script itself.
I'm going to make it a structure like items, definable in files. I'll redo all the current
ones with this system.

-Nvgg3t	

UPDATE: Finished :D

Money:
Make the name and decimal point to round at global variables. So I could give someone
2.30 money. Etc. I'll define them as global variables on the server and client.

UPDATE: Finished

- Nvgg3t

Pick up/Use:
Adding a new field to items so that you can define if they can be picked up/used. This
is simple and any items without the field would be assumed to be able to be picked up.

//Do we really need this?

-Nvgg3t

MySQL Saving:

MySQL saving is going to have to be toggleable, since alot of people with smaller servers don't really need it or know how to set it. However, this is almost crucial for people with bigger communities that have lots of data being handled, and need it to be saved fast and without much hassle.

The MySQL implementation of Tacoscript was absolutely horrible. Things were never set on a default, and thus you had to put the exact same information, several times. Not only that but setting it up was a pain, when it could have easily done with queries and on the fly.

It is possible for data columns to be created on the fly using MySQL queries, it would just need to be set to the right type, although that would be no hassle given that there is a "type" operator on Lua.

And not only that, but MySQL can be threaded, using the GDatabase module, which would mean a significant boost on the speed of data sharing using MySQL.

UPDATE: Done but ugly as fuck. Remake recommended.

-Badass

Toggleable Text Saving:

Not all RP gamemodes actually need to save notes, although it could be a pretty cool feature for those who do. However, text saving is very intensive on networks, given the length of notes, and the like, and not only that, but they could easily clog up an inventory if the text containing them isn't set right.

Thus, I recommend using the Datastream module, which is now embeeded into all GMod releases, since it's threaded and heavily optimized. According to it's benchmarks, it can send 2000 characters in a single tick, so I guess our system would be able to send kind of that amount of characters. Since Datastream allows for both client to server and server to client communications, it won't be a pretty big deal sending that amount of text.

I assume as for actual saving, leaving each note in it's separate text file would be best. The server would simply get that file name, and send it to the client for it to be read. The name of the file would be stored into it's respective item, and so, the text file would be able to be edited and saved, as well as far easily recolected.

UPDATE - We're not doing this anymore. In fact, why the fuck did I list this? Anyhow, notes are now to be handled through HTML

-Badass

Revamped data fields:

The science behind this is pretty simple, if the field doesn't exist, get the type of the argument being that the field is about, make it a field inside the player's file, and then set it as either 0, if it's a number or an int, as false if it's a bool, or as "" if it's a string.

UPDATE - Uh what?

-Badass

Clothing System:

--Scratch that, it's made :D --

-Badass
